// Mixins.less
// Snippets of reusable CSS to develop faster and keep code readable
// -----------------------------------------------------------------


// COMPONENT MIXINS
// --------------------------------------------------

// Horizontal dividers - Overrides Twitter Bootstrap's mixin
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
.nav-divider(@top: #ebebeb, @bottom: #fff) {
  height: 1px;
  margin: ((@line-height-base / 2) - 1) 0; // 8px 0px
  overflow: hidden;
  background-color: @top;
  border-bottom: 1px solid @bottom;
}

// Button states
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
.btn-states(@startColor, @endColor, @text-color: #fff, @borderColor: @btn-border) {
  border: 1px solid @borderColor;
  color: @text-color;
  #gradient > .vertical(@startColor, @endColor);
  .reset-filter();

  // in these cases the gradient won't cover the background, so we override
  &:hover,
  &:focus,
  &:active,
  &.active {
    border: 1px solid darken(@borderColor, 5%);
    color: @text-color;
    #gradient > .vertical(@startColor, darken(@endColor, 5%));
    .reset-filter();
    background-color: darken(@endColor, 5%);
    background-color: darken(@endColor, 5%) e("\9");
  }

  &:active,
  &.active {
    border: 1px solid darken(@borderColor, 10%);
    #gradient > .vertical(@startColor, darken(@endColor, 10%));
    .reset-filter();
  }

  &:focus {
    border: 1px solid @borderColor;
    .box-shadow(inset 0 0 0 1px #fff);
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus,
    &:active,
    &.active {
      border: 1px solid @borderColor;
      #gradient > .vertical(@startColor, @endColor);
      .reset-filter();
      background-color: @startColor;
      background-color: @startColor e("\9");
      .box-shadow(none)
    }
  }
}

// Navbar vertical align - Overrides Twitter Bootstrap's mixin
// -------------------------
// Vertically center elements in the navbar or other bars.
// Example: an element has a height of 30px, so write out `.navbar-vertical-align(30px);` to calculate the appropriate top margin.
// Example: an element has a height of 30px and you want to vertically center it in a bar other than the navbar:
//          .navbar-vertical-align(32px, @navbar-main-height);
.navbar-vertical-align(@element-height, @bar-height: @navbar-height) {
  // margin-top: (@bar-height - @element-height) / 2;
  margin-top: ((@bar-height - @element-height) / 2);
  margin-bottom: ((@bar-height - @element-height) / 2);
}



// Framework mixins
// --------------------------------------------------

// Generate rem font-sizes with pixel fallbacks
// By default uses `@font-size-base` with an initial value of 13 (1.3rem or 13px)
.font-size(@font-size: @font-size-base) {
  @rem-size: (@font-size / 10);
  font-size: ~"@{font-size}px";
  font-size: ~"@{rem-size}rem";
}

// Override Twitter Bootstrap's formFieldState mixin
// Generate form validation states
.formFieldState(@text-color: #555, @border-color: #ccc, @background-color: #f5f5f5) {
  // Color the label text
  .control-label {
    color: @text-color;
  }
  // Set the border and box shadow on specific inputs to match
  .input-with-feedback {
    padding-right: 32px; // to account for the feedback icon
    border-color: @border-color;
    .box-shadow(none);
    &:hover {
      border-color: @border-color;
      .box-shadow(0 1px 2px rgba(0, 0, 0, 0.1) inset);
    }
    &:focus {
      border-color: @border-color;
      .box-shadow(0 1px 2px rgba(0, 0, 0, 0.3) inset);
    }
  }
}
