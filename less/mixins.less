// Mixins.less
// Snippets of reusable CSS to develop faster and keep code readable
// -----------------------------------------------------------------

// Popover arrows
// -------------------------
// For popovers
#popoverArrowBig {
  .top(@arrowWidth: 9px, @color: @white) {
    bottom: 0;
    left: 50%;
    margin-bottom: -@arrowWidth + 6px;
    margin-left: -@arrowWidth;
    border-left: @arrowWidth solid transparent;
    border-right: @arrowWidth solid transparent;
    border-top: @arrowWidth solid @color;
  }
  .left(@arrowWidth: 9px, @color: @white) {
    top: 50%;
    right: 0;
    margin-right: -@arrowWidth + 6px;
    margin-top: -@arrowWidth;
    border-top: @arrowWidth solid transparent;
    border-bottom: @arrowWidth solid transparent;
    border-left: @arrowWidth solid @color;
  }
  .bottom(@arrowWidth: 9px, @color: @white) {
    top: 0;
    left: 50%;
    margin-top: -@arrowWidth + 6px;
    margin-left: -@arrowWidth;
    border-left: @arrowWidth solid transparent;
    border-right: @arrowWidth solid transparent;
    border-bottom: @arrowWidth solid @color;
  }
  .right(@arrowWidth: 9px, @color: @white) {
    top: 50%;
    left: 0;
    margin-left: -@arrowWidth + 6px;
    margin-top: -@arrowWidth;
    border-top: @arrowWidth solid transparent;
    border-bottom: @arrowWidth solid transparent;
    border-right: @arrowWidth solid @color;
    border-color: transparent @color;
  }
}


//TODO: Refactor these into a single mixin that accepts the navbar height as a parameter

// Googlebar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `.navbarGoogleBarVerticalAlign(30px);` to calculate the appropriate top margin.
.navbarGoogleBarVerticalAlign(@elementHeight) {
  margin-top: (@navbarGoogleBarHeight - @elementHeight) / 2;
}

// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `.navbarGoogleNavVerticalAlign(30px);` to calculate the appropriate top margin.
.navbarGoogleNavVerticalAlign(@elementHeight) {
  margin-top: (@navbarGoogleNavHeight - @elementHeight) / 2;
}
